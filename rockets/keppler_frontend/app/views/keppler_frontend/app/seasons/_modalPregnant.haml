.modal.modal_status.fade{ id: "modalPregnant-#{cow.id}", "aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", role: "dialog" }
  .modal-dialog{role: "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
          %span{"aria-hidden" => "true"} ×
      .modal-body{ style: "padding: 20px;"}
        .container_custom
          .row
            .col-sm-12
              %h1
                Nueva preñez
              .row
                .col-sm-12
                  %h3
                    Número de Serie
                    %b #{cow.serie_number}
                  = simple_form_for [@farm, @season, KepplerCattle::Status.new], url: create_pregnancies_farm_season_path(@farm.id, @season.id, cow.id, cow.strategic_lot.id), method: :post, html: { style: 'width: 100%' } do |f|
                    .row.mt-4
                      = f.input :user_id, input_html: { name: "status[user_id]", value: current_user.id }, as: :hidden
                      = f.input :cow_id, input_html: { name: "status[cow_id]", value: cow.id }, as: :hidden
                      = f.input :status_type, input_html: { name: "status[type]", value: 'Pregnancy' }, as: :hidden
                      %input{ name: 'status[farm_id]', value: @farm.id, type: (Rails.env.eql?('development') ? :hidden : :hidden) }
                      %input{ name: 'status[season_id]', value: @season.id, type: (Rails.env.eql?('development') ? :hidden : :hidden) }
                      .col-sm-12.col-md-6
                        .form-group
                          %label.label_custom--strong Fecha de la preñez
                          %input.form-control.input_custom.datepicker#status_date{ name: "status[date]", autocomplete: 'off', value: Date.today }
                      .col-sm-12.col-md-6
                        .form-group
                          %label.label_custom--strong Meses de preñez
                          %input.form-control.input_custom#status_months{ name: "status[months]", type: 'number', autocomplete: 'off', value: 0, min: 0, max: 9 }
                      .col-sm-12.col-md-6
                        .form-group
                          %label.label_custom--strong Pajuela
                          %select.form-control.input_custom.selexct2{ name: "status[insemination_id]"  }
                            - @farm.inseminations.each do |father|
                              - if cow.status.status_type.eql?('Service')
                                - insemination_used = father&.id == cow.statuses.where(status_type: 'Service').last&.insemination_id
                                %option{ value: father&.id, selected: insemination_used, disabled: !insemination_used } #{father&.serie_number} #{'(' + father&.short_name + ')' if father&.short_name}
                              - else
                                %option{ value: father&.id } #{father&.serie_number} #{'(' + father&.short_name + ')' if father&.short_name}
                      .col-sm-12.col-md-6
                        .form-group.ui-widget
                          %label.label_custom--strong Nombre del responsable
                          %input.form-control.input_custom{ name: "status[user_name]", autocomplete: 'off', list: 'responsables' }
                          %datalist#responsables
                            - KepplerFarm::Responsable.all.each do |responsable|
                              %option{ value: responsable.name }
                      .col-sm-12
                        .form-group
                          %label.label_custom--strong Observaciones
                          %input.form-control.input_custom{ name: "status[observations]" }
              
                      .col-sm-12
                        .float-right
                          %button.btn.btn_custom.btn--filled.btn--medium{ type: 'submit' }
                            %i.icofont-save
                            Guardar


:css
  .service{
    width: 20px;
    height: 20px;
    border-radius: 50%;
  }
  .service-active {
    background-color: #28C76F;
  }
  .service-inactive {
    background-color: #ff0000c7;
  }
:javascript

  $('.select2').select2()

  $.datepicker.regional['es'] = {
    closeText: 'Cerrar',
    prevText: '< Ant',
    nextText: 'Sig >',
    currentText: 'Hoy',
    monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
    monthNamesShort: ['Ene','Feb','Mar','Abr', 'May','Jun','Jul','Ago','Sep', 'Oct','Nov','Dic'],
    dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
    dayNamesShort: ['Dom','Lun','Mar','Mié','Juv','Vie','Sáb'],
    dayNamesMin: ['Do','Lu','Ma','Mi','Ju','Vi','Sá'],
    weekHeader: 'Sm',
    dateFormat: 'yy-mm-dd',
    firstDay: 1,
    isRTL: false,
    showMonthAfterYear: false,
    yearSuffix: ''
  };

  $.datepicker.setDefaults($.datepicker.regional['es']);

  $('.datepicker').datepicker({
    dateFormat: 'yy-mm-dd',
    showOtherMonths: true,
    selectOtherMonths: true,
    changeMonth: true,
    changeYear: true,
    maxDate: 0,
    setDate: 0,
    yearRange: "c-1:c+1",
  }, $.datepicker.regional[ "es" ])

  function editar_fecha(fecha, intervalo, dma, separador) {
  
    var separador = separador || "-";
    var arrayFecha = fecha.split(separador);
    var anio = arrayFecha[0];
    var mes = arrayFecha[1];
    var dia = arrayFecha[2];  
    
    var fechaInicial = new Date(anio, mes - 1, dia);
    var fechaFinal = fechaInicial;
    if(dma=="m" || dma=="M"){
      fechaFinal.setMonth(fechaInicial.getMonth()+parseInt(intervalo));
    }else if(dma=="y" || dma=="Y"){
      fechaFinal.setFullYear(fechaInicial.getFullYear()+parseInt(intervalo));
    }else if(dma=="d" || dma=="D"){
      fechaFinal.setDate(fechaInicial.getDate()+parseInt(intervalo));
    }else{
      return fecha;
    }
    dia = fechaFinal.getDate();
    mes = fechaFinal.getMonth() + 1;
    anio = fechaFinal.getFullYear();
  
    dia = (dia.toString().length == 1) ? "0" + dia.toString() : dia;
    mes = (mes.toString().length == 1) ? "0" + mes.toString() : mes;
  
    return `${anio}${separador}${mes}${separador}${dia}`;
  }

  $('#status_date').change(function() {
    status_date = new Date($('#status_date').val())
    today = new Date()
    $('#status_months').val(parseInt((today.getTime() - status_date.getTime()) / (1000*60*60*24*30)))
  })

  $('#status_months').keyup(function() {
    s_months = $('#status_months').val()
    today = new Date()
    year = today.getFullYear();
    month = today.getMonth() + 1;
    day = today.getDate();
    full_date = `${year}-${month}-${day}`
    $('#status_date').val(
      editar_fecha(full_date, `-${s_months}`, 'm') == 'NaN-NaN-NaN' ?
       editar_fecha(full_date, '0', 'm') :
       editar_fecha(full_date, `-${s_months}`, 'm')
    )
  })
- @cows.each do |cow|            
  - unless cow.status&.status_type&.eql?('Pregnancy')  
    :javascript
      $(document).ready(function(){
        var id = #{cow.id}
        $('.cow').not('#cow-'+id).addClass('tr-active')
      })
    - break   

:scss
  .tr-active {
    opacity: 0.4 !important;
  }